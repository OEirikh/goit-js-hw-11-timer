{"version":3,"sources":["js/classCountdownTimer.js","index.js"],"names":["CountdownTimer","constructor","targetDate","selector","refs","days","document","querySelector","hours","mins","secs","start","setInterval","currentDate","Date","now","deltaTime","updateTimer","getTimeComponents","time","pad","Math","floor","value","String","padStart","textContent","timer"],"mappings":";;;AAAA,MAAMA,EACJC,aAAY,WAAEC,EAAF,SAAcC,IACnBC,KAAAA,KAAO,CACVC,KAAMC,SAASC,iBAAiBJ,yBAChCK,MAAOF,SAASC,iBAAiBJ,0BACjCM,KAAMH,SAASC,iBAAiBJ,yBAChCO,KAAMJ,SAASC,iBAAiBJ,0BAG7BD,KAAAA,WAAaA,EACbS,KAAAA,QAGPA,QACEC,YAAY,KACJC,MAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKd,WAAaW,EAC/BI,KAAAA,YAAY,KAAKC,kBAAkBF,KACvC,KAGLE,kBAAkBC,GAKT,MAAA,CAAEd,KAJI,KAAKe,IAAIC,KAAKC,MAAMH,EAAQ,QAI1BX,MAHD,KAAKY,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAG9CV,KAFT,KAAKW,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAElCT,KADf,KAAKU,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,OAI1DC,IAAIG,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCR,aAAY,KAAEZ,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,IAC1BN,KAAAA,KAAKC,KAAKqB,YAAcrB,EACxBD,KAAAA,KAAKI,MAAMkB,YAAclB,EACzBJ,KAAAA,KAAKK,KAAKiB,YAAcjB,EACxBL,KAAAA,KAAKM,KAAKgB,YAAchB,GAIjC,MAAMiB,EAAQ,IAAI3B,EAAe,CAC/BG,SAAU,WACVD,WAAY,IAAIY,KAAK;;AC1CvB,aADA,QAAA,oBACA,QAAA","file":"src.4b431165.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ targetDate, selector }) {\n    this.refs = {\n      days: document.querySelector(`${selector} [data-value=\"days\"]`),\n      hours: document.querySelector(`${selector} [data-value=\"hours\"]`),\n      mins: document.querySelector(`${selector} [data-value=\"mins\"]`),\n      secs: document.querySelector(`${selector} [data-value=\"secs\"]`),\n    };\n\n    this.targetDate = targetDate;\n    this.start();\n  }\n\n  start() {\n    setInterval(() => {\n      const currentDate = Date.now();\n      const deltaTime = this.targetDate - currentDate;\n      this.updateTimer(this.getTimeComponents(deltaTime));\n    }, 1000);\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  updateTimer({ days, hours, mins, secs }) {\n    this.refs.days.textContent = days;\n    this.refs.hours.textContent = hours;\n    this.refs.mins.textContent = mins;\n    this.refs.secs.textContent = secs;\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jan 01, 2022'),\n});\n","import './sass/main.scss';\nimport './js/classCountdownTimer';\n"]}